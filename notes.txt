OBJECTIVE
- hardware, quite practical level
- hw problems: cameras in general, camera selection, calibration, syncing
- face tracking: working in 2d space / mesh reconstruction in 3d
- other objects

FACES
- paul debevec
- zurich http://graphics.ethz.ch/publications/papers/papers.php

CAMS
- rolling/global shutter
- buy/rent?
- bradley10 using sony hdr-sr7 hd camcorders
- 3d cams? pairwise stereo? general multi view?
  - stereo pairs vs. general multiview quite different
  - opencv deals with pairs a lot
- connection: memcard/usb2/usb3/ethernet/firewire/custom
- trade-offs:
  - size
  - resolution
  - speed
  - cmos/ccd
  - configurability
  - noise
  - price
  - availability
- control sw/hw? platform support?
- phone camera?
- by heikki hyyti:
  - basler good
  - imaging source bad
  - firewire bad
  - foculus dunno
  - optical sensor size
  - linux software, open source important
  - non-free/expensive drivers = no-no
  - gigabit ethernet good
 - raw image before bayering
 - compression artifacts are nasty (edge detectors go wild etc.)
 - lens distortion?

DSLR/CAMCORDER/MACHINE VISION CAM
- cmos rolling shutter, ccd not
- camcorder
  - better autofocus
  - deep dof
  - high-ish fps
  - hard disk for storage
  - in general better video abilities
  - gphoto2?
  - usually can zoom well
- dslr
  - intended for single pictures
  - memory card speed might be an issue
  - gphoto2
  - might not focus automatically when grabbing a video and zooming
- machine vision cameras
  - flexible in terms of sw
  - vendor-specific apis
  - probably easier to control
  - expensive
  - raw images (high bandwidth)
  - usually fixed lens

PHOTO SYNC
- long exposure, one flash
- slr shutter trigger input (simple)

VIDEO SYNC
- high speed strobe light and fast fps in cameras
- genlock: good, expensive, in pro models only?
- many professional sw use audio; clapperboard, assume constant frame rate
- camera drift? not expected during our short recordings
- inter-frame interpolation when frames are not taken at the same time? optical flow and morphing?
- feature tracking, virtual synchronization
- lend a couple of machine vision cams (hyyti) and experiment before bying; how easy (must be somewhat feasible as it has been done)

GENERAL
- markerless!
- use pre-models?
- commonly structured lightning/makeup/markers
  - every 5th frame fre of patterns for texture extraction (zhang snavely curless 2004)
- very good resolution -> enough pore-level features
- many cameras -> zoom in to just a part of the target
  - zoom lens or just target near enough the cameras
- noise vs motion blur trade-off (bilateral filter)
- 3d noise removal, ignore points that have no close pair in other clouds
  - and iterative closest point
- correspondence problem
- bundle adjustment (maybe not if camera parameters fixed)
- structure from motion
- homography
- feature tracking (klt)
- surface tracking
- optical flow
- rectification
- match moving
- corresponding problems in e.g. autonomous driving?
- are outdoor methods of any use?

SW ALREADY
- kinect
- autodesk 123d catch
- meshlab
- meshmixer
- photofly
- sfm toolkit

NAMES
- debevec
- zisserman
- bradley
- zach
- triggs
- tomasi
- pollefeys
- hartley
- faugeras
- computer vision szeliski p. 20 fig 1.11
  - shape from X


FPS
- frame rate 30/1.001 (29.97), 24/1.001 (23.976): ntsc broadcast frame rate, radio tech
- fps 25/30 comes from interlacing and half the line frequency
- frame rate follies / artbeats.com
- video industry dups/skips frames
- 2997/100 vs 30*1000/1001 :(
- computer vision cameras can be triggered such that fps can be arbitrarily set
- fps != shutter speed, need fast shutter (not film-like) to decrease motion blur
- high shutter speed also needs lots of light

CALIBRATION
- opencv, machine vision matrices
- intrisic, extrisic parameters
- essential+fundamental matrices
- triangulation
- epipolar geometry etc.

MAPPING/TRACKING
- tracking feature points
- color usually not important
- mark features at the beginning manually?
- brightness constancy might not hold (blushing, not lambertian surfaces, etc.)
  - otoh, blushing, small wrinkles and such are important for the time-varying texture

MESH RECONSTRUCTION
- combining meshes from multiple viewpoints (cameras/camera pairs)
- e.g. ransac for removing noise
- called 3d mesh registration
- optical flow
- iterative closest point fitting
- 3d morphable models
- stitch

PROCESSING SOFTWARE
- minimize deps = maximise ease of usage
- maximize ease of coding => obviously deps++
- opencv, ffmpeg, c++, python
- KLT: http://www.inf.ethz.ch/personal/chzach/opensource.html
- http://slowmovideo.granjow.net/

PIPELINE
0. power on the system
1. align the cameras (several? stereo pairs?)
2. calibrate them to be able to get 3d
3. record pics/video, careful with syncing
4. for each frame group
   a. find matching features (correspondence; sift/surf)
   b. build 3d meshes (triangulation)
   c. align the meshes to a single model (registration)
   d. refine the model, maybe
   (filter the data at some point here - outliers, noise, holes, ...)
5. combine mesh frames to a motion

OPTICAL FLOW
- long history
- several mature commercial video editing products
- matrix (since 1999)
- drift?

TEXTURE
- basic uv mapping
- project texture to computed mesh
- use texture color from the beginning
- somehow use colors and optical flow everywhere
- should acquire hi-def texture with the geometry - varies over time

HW SUPPORT MECHANICS
- aluminium profile system
- rs-online.com
- maytec
- norcan profile
- purso.fi
- valuframe
- aluflex
- directindustry
- arduino-like sync signal
- connectors, wire
- gige/usb3 cards

SW: GENERAL
- "library", command-line tools for automation and a sample gui

SW: INIT
- add cameras, input specs, names etc.
- click to calibrate
- visualize camera poses

SW: SHOOT
- click to start shooting (sync cameras)
- grab video feeds/snapshots

SW: POSTPROCESS
- 2d frame sets to point cloud sets
